//#define REMOTEXY__DEBUGLOG    

// RemoteXY select connection mode and include library 
#define REMOTEXY_MODE__WIFI_POINT

const int trigpin = D1;  
const int echopin = D2;  
long duration;  
int distance;

#include <ESP8266WiFi.h>

// RemoteXY connection settings 
#define REMOTEXY_WIFI_SSID "Car"
#define REMOTEXY_WIFI_PASSWORD "12345678"
#define REMOTEXY_SERVER_PORT 6377

#define in1 D5
#define in2 D6

#define in3 D7
#define in4 D8


#include <RemoteXY.h>

// RemoteXY GUI configuration  
#pragma pack(push, 1)  
uint8_t RemoteXY_CONF[] =   // 67 bytes
  { 255,4,0,0,0,60,0,17,0,0,0,24,1,200,84,1,1,4,0,1,
  18,43,35,35,0,2,31,226,134,147,0,1,18,3,35,35,0,2,31,226,
  134,145,0,1,93,38,35,35,0,2,31,226,134,186,0,1,140,38,35,35,
  0,2,31,226,134,187,0 };
  
// this structure defines all the variables and events of your control interface 
struct {

    // input variables
  uint8_t button_01; // =1 if button pressed, else =0
  uint8_t button_02; // =1 if button pressed, else =0
  uint8_t button_03; // =1 if button pressed, else =0
  uint8_t button_04; // =1 if button pressed, else =0

    // other variable
  uint8_t connect_flag;  // =1 if wire connected, else =0

} RemoteXY;   
#pragma pack(pop)
 
/////////////////////////////////////////////
//           END RemoteXY include          //
/////////////////////////////////////////////



void setup() 
{
  Serial.begin(9600);
  
  RemoteXY_Init (); 
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);

  pinMode(trigpin,OUTPUT);  
  pinMode(echopin,INPUT); 

  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, LOW);
  
  // TODO you setup code
  
}

void loop() 
{ 
  delay(50);
  RemoteXY_Handler ();

  digitalWrite(trigpin,HIGH);  
  delayMicroseconds(10);  
  digitalWrite(trigpin,LOW);  
  duration=pulseIn(echopin,HIGH);  
  distance = duration*0.034/2;
  
  Serial.println(distance);
  
  if( distance >= 30 && RemoteXY.button_01 == 0 && RemoteXY.button_02 == 1 && RemoteXY.button_03 == 0 && RemoteXY.button_04 == 0)
  {
    forward();
  }

  else if(RemoteXY.button_01 == 1 && RemoteXY.button_02 == 0 && RemoteXY.button_03 == 0 && RemoteXY.button_04 == 0)
  {
    reverse();
  }

  else if(RemoteXY.button_01 == 0 && RemoteXY.button_02 == 0 && RemoteXY.button_03 == 0 && RemoteXY.button_04 == 1)
  {
    clockwise();
  }

  else if(RemoteXY.button_01 == 0 && RemoteXY.button_02 == 0 && RemoteXY.button_03 == 1 && RemoteXY.button_04 == 0)
  {
    anticlock();
  }

  else
  {
    stop();
  }
}


void forward()
{
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
}

void reverse()
{
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
}

void clockwise()
{
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
}

void anticlock()
{
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
}

void stop()
{
  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4,Â LOW);
}
